import concurrent.futures
import logging

def summarize_and_suggest_titles_for_documents(documents, llm, num_threads=4, batch_size=4):
    results = []

    # Split into batches
    batches = [documents[i:i + batch_size] for i in range(0, len(documents), batch_size)]

    with concurrent.futures.ThreadPoolExecutor(max_workers=num_threads) as executor:
        futures = {
            executor.submit(process_batch, batch, llm): batch
            for batch in batches
        }

        for future in concurrent.futures.as_completed(futures):
            batch = futures[future]
            try:
                batch_results = future.result()
                results.extend(batch_results)
            except Exception as e:
                logging.error(f"Error processing batch: {e}")
                for doc in batch:
                    filename = getattr(doc, 'filename', 'Unknown file')
                    logging.error(f" - Failed file: {filename}")

    return results
